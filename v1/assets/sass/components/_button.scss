/* Button */

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		@include vendor('appearance', 'none');
		@include vendor('transition', 'background-color #{_duration(transition)} ease-in-out, color #{_duration(transition)} ease-in-out');
		border-radius: _size(border-radius);
		border: 0;
		cursor: pointer;
		display: inline-block;
		font-weight: _font(weight-bold);
		height: 2.85em;
		line-height: 2.95em;
		padding: 0 1.5em;
		text-align: center;
		text-decoration: none;
		white-space: nowrap;

		&.icon {
			padding-left: 1.35em;

			&:before {
				margin-right: 0.5em;
			}
		}

		&.fit {
			display: block;
			margin: 0 0 (_size(element-margin) * 0.5) 0;
			width: 100%;
		}

		&.small {
			font-size: 0.8em;
		}

		&.big {
			font-size: 1.35em;
		}

		&.disabled,
		&:disabled {
			@include vendor('pointer-events', 'none');
			opacity: 0.25;
		}

		@include breakpoint(small) {
			width: 100%;
		}

		@include breakpoint(xsmall) {
			padding: 0;

		}
	}

	@mixin color-button($p: null) {
		$highlight: _palette($p, highlight);

		input[type="submit"],
		input[type="reset"],
		input[type="button"],
		button,
		.button {
			@if $p == accent2 {
				background-color: _palette($p, fg-bold);
				color: _palette($p, bg) !important;
			}
			@else {
				background-color: _palette(accent2, bg);
				color: _palette(accent2, fg-bold) !important;

				&:hover {
					background-color: lighten(_palette(accent2, bg), 5);
				}

				&:active {
					background-color: darken(_palette(accent2, bg), 5);
				}
			}

			&.alt {
				background-color: transparent;
				box-shadow: inset 0 0 0 (_size(border-width) * 2) _palette($p, border);
				color: _palette($p, fg-bold) !important;

				&:hover {
					background-color: _palette($p, border-bg);
				}

				&:active {
					background-color: _palette($p, border2-bg);
				}

				&.icon {
					&:before {
						color: _palette($p, fg-light);
					}
				}
			}

			&.special {
				@if $p == $highlight {
					background-color: _palette($p, fg-bold);
					color: _palette($p, bg) !important;
				}
				@else {
					background-color: _palette($highlight, bg);
					color: _palette($highlight, fg-bold) !important;

					&:hover {
						background-color: lighten(_palette($highlight, bg), 5);
					}

					&:active {
						background-color: darken(_palette($highlight, bg), 5);
					}
				}
			}
		}
	}

	@include color-button;